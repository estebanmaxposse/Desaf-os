{
  "stats": {
    "suites": 6,
    "tests": 5,
    "passes": 5,
    "pending": 0,
    "failures": 0,
    "start": "2023-02-02T12:41:07.499Z",
    "end": "2023-02-02T12:41:09.210Z",
    "duration": 1711,
    "testsRegistered": 5,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "048fd11b-bdfb-44cd-936a-f2e18941c73f",
      "title": "",
      "fullFile": "C:\\Users\\Usuario\\Documents\\Coderhouse\\Backend\\Desafíos\\TP19\\test\\products.test.js",
      "file": "\\test\\products.test.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "ce96e1a9-b83e-4c4c-b843-02eec793dd16",
          "title": "Product api test",
          "fullFile": "C:\\Users\\Usuario\\Documents\\Coderhouse\\Backend\\Desafíos\\TP19\\test\\products.test.js",
          "file": "\\test\\products.test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Product api test\"",
              "fullTitle": "Product api test \"before all\" hook in \"Product api test\"",
              "timedOut": false,
              "duration": 3,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "console.log('STARTING SERVER');\nserver = startServer()\nawait client.connectDb()\nrequest = supertest('http://localhost:8080/api/products')",
              "err": {},
              "uuid": "c27893e5-8d4c-408a-b503-cdfb35492b7b",
              "parentUUID": "ce96e1a9-b83e-4c4c-b843-02eec793dd16",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "37bc99b5-7ea7-42fd-b859-6a4181dc52a9",
              "title": "GET ALL PRODUCTS",
              "fullFile": "C:\\Users\\Usuario\\Documents\\Coderhouse\\Backend\\Desafíos\\TP19\\test\\products.test.js",
              "file": "\\test\\products.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Should return status 200 + all products",
                  "fullTitle": "Product api test GET ALL PRODUCTS Should return status 200 + all products",
                  "timedOut": false,
                  "duration": 1164,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let response = await request.get('/')\n// console.log(response.status);\n// console.log(response.body);\nexpect(response.status).to.eql(200)",
                  "err": {},
                  "uuid": "1eb934ec-1ddb-4730-a6f1-a4078c34ae2a",
                  "parentUUID": "37bc99b5-7ea7-42fd-b859-6a4181dc52a9",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "1eb934ec-1ddb-4730-a6f1-a4078c34ae2a"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1164,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "f9c0f19a-5203-46a3-b23a-5e1c7533e5c6",
              "title": "GET SINGLE PRODUCT",
              "fullFile": "C:\\Users\\Usuario\\Documents\\Coderhouse\\Backend\\Desafíos\\TP19\\test\\products.test.js",
              "file": "\\test\\products.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Should return Gamecube Controller Adapter",
                  "fullTitle": "Product api test GET SINGLE PRODUCT Should return Gamecube Controller Adapter",
                  "timedOut": false,
                  "duration": 105,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let response = await request.get('/636bd97f8b94654de74ee272')\n// console.log(response.status);\n// console.log(response.body);\nexpect(response.status).to.eql(200)",
                  "err": {},
                  "uuid": "045eb646-a20e-4940-b51b-68ebd83b72f3",
                  "parentUUID": "f9c0f19a-5203-46a3-b23a-5e1c7533e5c6",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "045eb646-a20e-4940-b51b-68ebd83b72f3"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 105,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "250c7bed-983b-4361-b424-56ff1b976962",
              "title": "POST MOCK PRODUCT",
              "fullFile": "C:\\Users\\Usuario\\Documents\\Coderhouse\\Backend\\Desafíos\\TP19\\test\\products.test.js",
              "file": "\\test\\products.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Should post mock product",
                  "fullTitle": "Product api test POST MOCK PRODUCT Should post mock product",
                  "timedOut": false,
                  "duration": 211,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let mockPostProduct = generateProducts.singleProduct()\nlet response = await request.post('/').send(mockPostProduct)\n// console.log(response.status);\n// console.log(response.body);\nexpect(response.status).to.eql(201)\nproductId = response.body.product",
                  "err": {},
                  "uuid": "9966e370-b965-499e-b6c5-db5d8ae110a2",
                  "parentUUID": "250c7bed-983b-4361-b424-56ff1b976962",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "9966e370-b965-499e-b6c5-db5d8ae110a2"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 211,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "5f9a01ba-74d0-483b-b9f5-8fe0b66e8323",
              "title": "UPDATE MOCK PRODUCT",
              "fullFile": "C:\\Users\\Usuario\\Documents\\Coderhouse\\Backend\\Desafíos\\TP19\\test\\products.test.js",
              "file": "\\test\\products.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Should update mock product",
                  "fullTitle": "Product api test UPDATE MOCK PRODUCT Should update mock product",
                  "timedOut": false,
                  "duration": 109,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let response = await request.put(`/${productId}`).send(mockUpdateProduct)\n// console.log(response.status);\n// console.log(response.body);\nexpect(response.status).to.eql(201)",
                  "err": {},
                  "uuid": "fca76d87-d7a0-4298-83a3-06ee45d22048",
                  "parentUUID": "5f9a01ba-74d0-483b-b9f5-8fe0b66e8323",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "fca76d87-d7a0-4298-83a3-06ee45d22048"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 109,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "49d383e9-05e4-4b8c-8aab-694c913e4e2d",
              "title": "DELETE MOCK PRODUCT",
              "fullFile": "C:\\Users\\Usuario\\Documents\\Coderhouse\\Backend\\Desafíos\\TP19\\test\\products.test.js",
              "file": "\\test\\products.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Should delete mock product",
                  "fullTitle": "Product api test DELETE MOCK PRODUCT Should delete mock product",
                  "timedOut": false,
                  "duration": 104,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let response = await request.delete(`/${productId}`)\n// console.log(response.status);\n// console.log(response.body);\nexpect(response.status).to.eql(201)",
                  "err": {},
                  "uuid": "f7cec114-43bb-436c-b8d5-5c3cb8c0030f",
                  "parentUUID": "49d383e9-05e4-4b8c-8aab-694c913e4e2d",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "f7cec114-43bb-436c-b8d5-5c3cb8c0030f"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 104,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "reports/mocha",
        "reportTitle": "mochaReport"
      },
      "version": "6.2.0"
    }
  }
}